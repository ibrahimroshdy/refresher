# Github workflow runner instructions using cutomized actions
name: Refresher CI

on: [push]

jobs:
  build_push:
    runs-on: ubuntu-latest
    name: build docker
    steps:
    ##########   CHECK OUT REPO AND PRINT REPO INFO #######
    - name: Checkout
      uses: actions/checkout@v3
    - name: Intro to job runner
      run: |
            echo "job runner details "
            echo "Event: ${{ github.event_name }}"
            echo "os: ${{ runner.os }} server."
            echo "Repository: ${{ github.repository }}:${{ github.ref_name }}."
            ls ${{ github.workspace }}
    ######### DOCKER BUILD AND PUSH CUSTOM ACTION #############
    - name: Docker Build and Push
      uses: ./.github/actions/docker-build-push-image
      with:
        username:
          ${{ github.REPOSITORY_OWNER }}
        password:
          ${{ secrets.pta }}
        registry:
          ghcr.io
        repository:
          ${{ github.repository }}
        tag:
          ${{ github.ref_name }}
        file:
          docker/Dockerfile
  test:
    needs: build_push
    runs-on: ubuntu-latest
    name:  test docker
    steps:
    ##########   CHECK OUT REPO AND PRINT REPO INFO #######
    - name: Checkout
      uses: actions/checkout@v3
    ######### DOCKER LOGIN AND PULL CUSTOM ACTION #############
    - name: Docker Login and Pull
      uses: ./.github/actions/docker-pull-image
      with:
        username:
          ${{ github.REPOSITORY_OWNER }}
        password:
          ${{ secrets.pta }}
        registry:
          ghcr.io
        repository:
          ${{ github.repository }}
        tag:
          ${{ github.ref_name }}
    - name: Run tests
      run: docker run ghcr.io/${{ github.repository }}:${{ github.ref_name }} /bin/bash -c "coverage run manage.py test apps && coverage xml --data-file=.coverage"
    - name: codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.codecov_token }} # not required for public repos
#        files: ./coverage.xml
        name: codecov-umbrella # optional
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)