version: "3"

services:
  grafana:
    image: grafana/grafana:7.5.7
    container_name: grafana
    ports:
      - 3000:3000
    restart: always
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana:/var/lib/grafana

  # Refresher Backend Service
  refresherbackend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: refresherbackend
    restart: always
    ports:
      - 8000:8000
    environment:
      - SECRET_KEY=aahckjadf^^^changeinproduction^^ajshjdjkhaskjdh
      - DEBUG=True
      - DATABASE_URL=postgres://refresher:refresher@postgres:5432/refresher
      - REDIS_SERVER_HOST=redis
    volumes:
      - media:/app/media
    depends_on:
      - postgres

  flower:
    image: mher/flower
    container_name: flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=8888
    ports:
      - 8888:8888
    depends_on:
      - swag
      - redis

  celery_worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: celery_worker
    restart: always
    command: /bin/bash -c "celery -A refresher_config.celery_app worker --loglevel=info"
    environment:
      - SECRET_KEY=aahckjadf^^^changeinproduction^^ajshjdjkhaskjdh
      - DEBUG=True
      - DATABASE_URL=postgres://refresher:refresher@postgres:5432/refresher
      - REDIS_SERVER_HOST=redis
    volumes:
      - media:/app/media
    depends_on:
      - redis
      - refresherbackend

  celery_beat:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: celery_beat
    restart: always
    command: /bin/bash -c "celery -A refresher_config.celery_app beat --loglevel=info"
    environment:
      - SECRET_KEY=aahckjadf^^^changeinproduction^^ajshjdjkhaskjdh
      - DEBUG=True
      - DATABASE_URL=postgres://refresher:refresher@postgres:5432/refresher
      - REDIS_SERVER_HOST=redis
    volumes:
      - media:/app/media
    depends_on:
      - redis
      - refresherbackend
      - celery_worker

  redis:
    image: redis:5-alpine
    container_name: redis
    restart: always
    ports:
      - "127.0.0.1:6379:6379"

  postgres:
    image: postgres:10
    container_name: postgres
    command: postgres -c 'max_connections=1000'
    restart: always
    environment:
      POSTGRES_DB: refresher
      POSTGRES_PASSWORD: refresher
      POSTGRES_USER: refresher
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:v2.17.1
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus:/prometheus

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: always
    ports:
      - 9100:9100
    links:
      - prometheus

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8000
    links:
      - prometheus

  postgres_exporter:
    image: bitnami/postgres-exporter:latest
    container_name: postgres_exporter
    restart: always
    environment:
      - DATA_SOURCE_NAME=postgresql://refresher:refresher@postgres:5432/refresher?sslmode=disable
    ports:
      - "9187:9187"
    depends_on:
      - postgres
      - prometheus

volumes:
  grafana:
    external: false
  media:
    external: false
  postgres:
    external: false
  prometheus:
    external: false
