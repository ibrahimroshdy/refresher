version: "3"

services:
  # Refresher Backend Service
  refresherbackend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: refresherbackend
    restart: always
    ports:
      - 8000:8000
    environment:
      - DEBUG=True
      - GUNICORN_SSL=false
      - DATABASE_URL=postgres://refresher:refresher@postgres:5432/refresher
      - REDIS_SERVER_HOST=redis
    volumes:
      - media:/app/media
    depends_on:
      - postgres

  celery_worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: celery_worker
    restart: always
    command: /bin/bash -c "celery -A config.celery worker --loglevel=info"
    environment:
      - DEBUG=True
      - GUNICORN_SSL=false
      - DATABASE_URL=postgres://refresher:refresher@postgres:5432/refresher
      - REDIS_SERVER_HOST=redis
    volumes:
      - media:/app/media
    depends_on:
      - redis
      - refresherbackend

  celery_beat:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: celery_beat
    restart: always
    command: /bin/bash -c "celery -A config.celery beat --loglevel=info"
    environment:
      - DEBUG=True
      - GUNICORN_SSL=false
      - DATABASE_URL=postgres://refresher:refresher@postgres:5432/refresher
      - REDIS_SERVER_HOST=redis
    volumes:
      - media:/app/media
    depends_on:
      - redis
      - refresherbackend
      - celery_worker


  redis:
    image: redis:5-alpine
    container_name: redis
    restart: always
    ports:
      - "127.0.0.1:6379:6379"
        
  postgres:
    image: postgres:10
    container_name: postgres
    command: postgres -c 'max_connections=1000'
    restart: always
    environment:
      POSTGRES_DB: refresher
      POSTGRES_PASSWORD: refresher
      POSTGRES_USER: refresher
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data

volumes:
  media:
    external: false
  postgres:
    external: false
